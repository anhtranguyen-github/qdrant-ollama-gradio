services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.10.1
    container_name: rag-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - rag-network
    healthcheck:
      test:
        - CMD-SHELL
        - bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Ollama Service (pull models automatically)
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./scripts/ollama-entrypoint.sh:/ollama-entrypoint.sh
    entrypoint: ["/bin/sh", "/ollama-entrypoint.sh"]
    networks:
      - rag-network
    healthcheck:
      test: "bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s


  # RAG Chat Application
  rag-app:
    build: .
    container_name: rag-chat-app
    ports:
      - "7860:7860"
    environment:
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
      - OLLAMA_BASE_URL=http://ollama:11434
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    networks:
      - rag-network
    depends_on:
      ollama:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  qdrant_data:
    driver: local
  ollama_data:
    driver: local

networks:
  rag-network:
    driver: bridge
